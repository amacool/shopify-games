{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Popover, ActionList, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/dashboard.css';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      widgets: [],\n      showPopup: false,\n      index: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      // fetch(`https://app.trytada.com/getAllWidgets`, {\n      fetch(\"https://71081b6b.ngrok.io/getAllWidgets\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          shop: Cookies.get('shopOrigin')\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        if (json.error) {\n          return;\n        }\n\n        if (json) {\n          _this.setState({\n            widgets: json\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglePopover\", function (key) {\n      var showPopup = _this.state.showPopup;\n\n      _this.setState({\n        showPopup: !showPopup,\n        index: key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createNewWidget\", function () {\n      window.location.href = '/create';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editWidget\", function (key) {\n      var widgets = _this.state.widgets;\n      Cookies.set('widget_id', widgets[key]._id);\n      window.location.href = '/coupons';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseWidget\", function (key) {\n      var widgets = _this.state.widgets; // fetch(`https://app.trytada.com/pauseWidget`, {\n\n      fetch('https://71081b6b.ngrok.io/pauseWidget', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          widget_id: widgets[key]._id\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        if (json.error) {\n          return;\n        }\n\n        if (json) {\n          widgets[key].pause = !widgets[key].pause;\n\n          _this.setState({\n            widgets: widgets\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteWidget\", function (key) {\n      var widgets = _this.state.widgets; // fetch(`https://app.trytada.com/deleteWidget`, {\n\n      fetch('https://71081b6b.ngrok.io/deleteWidget', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          widget_id: widgets[key]._id\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        if (json.error) {\n          return;\n        }\n\n        if (json) {\n          delete widgets[key];\n\n          _this.setState({\n            widgets: widgets\n          });\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          widgets = _this$state.widgets,\n          showPopup = _this$state.showPopup,\n          index = _this$state.index;\n      return React.createElement(Page, {\n        title: \"Tada Dashboard\"\n      }, React.createElement(Heading, null, \"Recent Widgets\"), React.createElement(\"div\", {\n        className: \"display-setting\"\n      }, widgets.length == 0 ? React.createElement(\"div\", null, \"No recent widgets!\") : widgets.map(function (widget, key) {\n        if (key < 2) {\n          var activator = React.createElement(\"div\", {\n            className: \"dashboard-widget\",\n            onClick: function onClick() {\n              return _this2.togglePopover(key);\n            }\n          }, React.createElement(\"div\", null, widget.type), React.createElement(\"div\", null, React.createElement(\"h3\", null, widget.name), React.createElement(\"p\", null, widget.pause ? 'On Hold' : 'Active'), React.createElement(\"p\", null, \"Last modified: \", widget.created_at)));\n          return React.createElement(Popover, {\n            active: showPopup == true && index == key,\n            activator: activator,\n            onClose: function onClose() {\n              return _this2.togglePopover(key);\n            }\n          }, React.createElement(ActionList, {\n            items: [{\n              content: 'Edit',\n              onAction: function onAction() {\n                return _this2.editWidget(key);\n              }\n            }, {\n              content: widget.pause == 1 ? 'Resume' : 'Pause',\n              onAction: function onAction() {\n                return _this2.pauseWidget(key);\n              }\n            }, {\n              content: 'Delete',\n              onAction: function onAction() {\n                return _this2.deleteWidget(key);\n              }\n            }]\n          }));\n        } else if (key == 2) {\n          return React.createElement(\"div\", {\n            className: \"dashboard-all-widget\"\n          }, React.createElement(Button, null, \"All Widgets\"));\n        }\n      })), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.createNewWidget();\n        },\n        primary: true\n      }, \"Create New Widget\"));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/dev/Documents/Git/tadaShopify/pages/dashboard.js"],"names":["Popover","ActionList","Button","RadioButton","Stack","Heading","Page","store","Cookies","Dashboard","widgets","showPopup","index","fetch","method","headers","body","shop","get","then","resp","json","error","setState","key","state","window","location","href","set","_id","widget_id","pause","length","map","widget","activator","togglePopover","type","name","created_at","content","onAction","editWidget","pauseWidget","deleteWidget","createNewWidget","React","Component"],"mappings":"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","sourcesContent":["import { Popover, ActionList, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/dashboard.css';\n\nclass Dashboard extends React.Component {\n  state = { widgets: [], showPopup: false, index: 0 };\n\n  componentDidMount = () => {\n    // fetch(`https://app.trytada.com/getAllWidgets`, {\n    fetch(`https://71081b6b.ngrok.io/getAllWidgets`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        shop: Cookies.get('shopOrigin')\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      if(json.error) {\n        return;\n      }\n      if(json) {\n\n        this.setState({\n          widgets: json\n        });\n      }\n    });\n  }\n\n  render() {\n      const { widgets, showPopup, index } = this.state;\n    return (\n      <Page\n        title=\"Tada Dashboard\"\n      >\n        <Heading>Recent Widgets</Heading>\n        <div className=\"display-setting\">\n            { (widgets.length == 0)?(\n              <div>\n                No recent widgets!\n              </div>\n            ):(\n              widgets.map((widget, key) => {\n                if(key < 2 ) {\n                  const activator = (<div className=\"dashboard-widget\" onClick={() => this.togglePopover(key)}>\n                    <div>{widget.type}</div>\n                    <div>\n                        <h3>{widget.name}</h3>\n                        <p>{(widget.pause)?'On Hold':'Active'}</p>\n                        <p>Last modified: {widget.created_at}</p>\n                    </div>\n                  </div>\n                  );\n                  return (\n                    <Popover active={showPopup==true && index == key} activator={activator} onClose={() => this.togglePopover(key)}>\n                      <ActionList items={[{content: 'Edit', onAction: () => this.editWidget(key)}, {content: (widget.pause == 1)?'Resume':'Pause', onAction: () => this.pauseWidget(key)}, {content: 'Delete', onAction: () => this.deleteWidget(key)} ]} />\n                    </Popover>\n                  );\n                } else if (key == 2) {\n                  return <div className=\"dashboard-all-widget\">\n                      <Button>All Widgets</Button>\n                    </div>\n                }\n              })\n            )}\n        </div>\n        <Button onClick={() => this.createNewWidget()} primary>Create New Widget</Button>\n    </Page>\n    )\n  }\n\n  togglePopover = (key) => {\n    const {showPopup} = this.state;\n    this.setState({\n      showPopup: !showPopup,\n      index: key\n    });\n  }\n\n  createNewWidget = () => {\n      window.location.href = '/create';\n  }\n\n  editWidget = (key) => {\n    const {widgets} = this.state;\n    Cookies.set('widget_id', widgets[key]._id);\n    window.location.href = '/coupons';\n  }\n\n  pauseWidget = (key) => {\n    var { widgets } = this.state;\n    // fetch(`https://app.trytada.com/pauseWidget`, {\n    fetch('https://71081b6b.ngrok.io/pauseWidget', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        widget_id: widgets[key]._id,\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      if(json.error) {\n        return;\n      }\n      if(json) {\n        widgets[key].pause = !widgets[key].pause;\n        this.setState({\n          widgets: widgets\n        });\n      }\n    });\n  }\n\n  deleteWidget = (key) => {\n      var widgets = this.state.widgets;\n      // fetch(`https://app.trytada.com/deleteWidget`, {\n      fetch('https://71081b6b.ngrok.io/deleteWidget', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          widget_id: widgets[key]._id,\n        })\n      })\n      .then(resp => resp.json())\n      .then(json => {\n        if(json.error) {\n          return;\n        }\n        if(json) {\n          delete widgets[key];\n          this.setState({\n            widgets: widgets\n          });\n        }\n      });\n  }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}