{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Popover, ActionList, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport CanvasJSReact from '../public/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport '../stylesheets/dashboard.css';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      widgets: [],\n      showPopup: false,\n      index: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      fetch(\"https://app.trytada.com/getDashboardInfo\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          shop: Cookies.get('shopOrigin')\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        if (json) {\n          console.log(json);\n\n          _this.setState({\n            widgets: json\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglePopover\", function (key) {\n      var showPopup = _this.state.showPopup;\n\n      _this.setState({\n        showPopup: !showPopup,\n        index: key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createNewWidget\", function () {\n      window.location.href = '/create';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editWidget\", function (key) {\n      var widgets = _this.state.widgets;\n      Cookies.set('widget_id', widgets[key]._id);\n      Cookies.set('tada_game_type', widgets[key].type);\n      window.location.href = '/coupons';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseWidget\", function (key) {\n      var widgets = _this.state.widgets;\n      fetch(\"https://app.trytada.com/pauseWidget\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          widget_id: widgets[key]._id\n        })\n      }).then(function (resp) {\n        widgets[key].pause = !widgets[key].pause;\n\n        _this.togglePopover(key);\n\n        _this.setState({\n          widgets: widgets\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteWidget\", function (key) {\n      var widgets = _this.state.widgets;\n      fetch(\"https://app.trytada.com/deleteWidget\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          widget_id: widgets[key]._id\n        })\n      }).then(function (resp) {\n        _this.togglePopover(key);\n\n        widgets.splice(key, 1);\n\n        _this.setState({\n          widgets: widgets\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          widgets = _this$state.widgets,\n          showPopup = _this$state.showPopup,\n          index = _this$state.index;\n      var options = {\n        theme: \"light2\",\n        animationEnabled: true,\n        title: {\n          text: \"Units Sold VS Profit\"\n        },\n        subtitles: [{\n          text: \"Click Legend to Hide or Unhide Data Series\"\n        }],\n        axisX: {\n          title: \"States\"\n        },\n        axisY: {\n          title: \"Units Sold\",\n          titleFontColor: \"#6D78AD\",\n          lineColor: \"#6D78AD\",\n          labelFontColor: \"#6D78AD\",\n          tickColor: \"#6D78AD\",\n          includeZero: false\n        },\n        axisY2: {\n          title: \"Profit in USD\",\n          titleFontColor: \"#51CDA0\",\n          lineColor: \"#51CDA0\",\n          labelFontColor: \"#51CDA0\",\n          tickColor: \"#51CDA0\",\n          includeZero: false\n        },\n        toolTip: {\n          shared: true\n        },\n        legend: {\n          cursor: \"pointer\",\n          itemclick: this.toggleDataSeries\n        },\n        data: [{\n          type: \"spline\",\n          name: \"Units Sold\",\n          showInLegend: true,\n          xValueFormatString: \"MMM YYYY\",\n          yValueFormatString: \"#,##0 Units\",\n          dataPoints: [{\n            x: new Date(2017, 0, 1),\n            y: 120\n          }, {\n            x: new Date(2017, 1, 1),\n            y: 135\n          }, {\n            x: new Date(2017, 2, 1),\n            y: 144\n          }, {\n            x: new Date(2017, 3, 1),\n            y: 103\n          }, {\n            x: new Date(2017, 4, 1),\n            y: 93\n          }, {\n            x: new Date(2017, 5, 1),\n            y: 129\n          }, {\n            x: new Date(2017, 6, 1),\n            y: 143\n          }, {\n            x: new Date(2017, 7, 1),\n            y: 156\n          }, {\n            x: new Date(2017, 8, 1),\n            y: 122\n          }, {\n            x: new Date(2017, 9, 1),\n            y: 106\n          }, {\n            x: new Date(2017, 10, 1),\n            y: 137\n          }, {\n            x: new Date(2017, 11, 1),\n            y: 142\n          }]\n        }, {\n          type: \"spline\",\n          name: \"Profit\",\n          axisYType: \"secondary\",\n          showInLegend: true,\n          xValueFormatString: \"MMM YYYY\",\n          yValueFormatString: \"$#,##0.#\",\n          dataPoints: [{\n            x: new Date(2017, 0, 1),\n            y: 19034.5\n          }, {\n            x: new Date(2017, 1, 1),\n            y: 20015\n          }, {\n            x: new Date(2017, 2, 1),\n            y: 27342\n          }, {\n            x: new Date(2017, 3, 1),\n            y: 20088\n          }, {\n            x: new Date(2017, 4, 1),\n            y: 20234\n          }, {\n            x: new Date(2017, 5, 1),\n            y: 29034\n          }, {\n            x: new Date(2017, 6, 1),\n            y: 30487\n          }, {\n            x: new Date(2017, 7, 1),\n            y: 32523\n          }, {\n            x: new Date(2017, 8, 1),\n            y: 20234\n          }, {\n            x: new Date(2017, 9, 1),\n            y: 27234\n          }, {\n            x: new Date(2017, 10, 1),\n            y: 33548\n          }, {\n            x: new Date(2017, 11, 1),\n            y: 32534\n          }]\n        }]\n      };\n      return React.createElement(Page, null, React.createElement(\"div\", {\n        className: \"dashboard-top\"\n      }), React.createElement(\"div\", {\n        className: \"dashboard-sales\"\n      }, React.createElement(\"div\", {\n        className: \"date-select\"\n      }, React.createElement(DateRangePicker, {\n        startDate: \"1/1/2014\",\n        endDate: \"3/1/2014\"\n      }, React.createElement(\"button\", null, \"Click Me To Open Picker!\"))), React.createElement(\"div\", {\n        className: \"dashboard-info\"\n      }, React.createElement(\"div\", {\n        className: \"dashboard-info-element\"\n      }, React.createElement(\"div\", {\n        className: \"info-values\"\n      }, \"$2,543\"), React.createElement(\"div\", {\n        className: \"info-description\"\n      }, \"Sales amount using coupons\")), React.createElement(\"div\", {\n        className: \"dashboard-info-element\"\n      }, React.createElement(\"div\", {\n        className: \"info-values\"\n      }, \"24\"), React.createElement(\"div\", {\n        className: \"info-description\"\n      }, \"Emails\")), React.createElement(\"div\", {\n        className: \"dashboard-info-element\"\n      }, React.createElement(\"div\", {\n        className: \"info-values\"\n      }, \"12%\"), React.createElement(\"div\", {\n        className: \"info-description\"\n      }, \"Conversion rate from games\")))), React.createElement(\"div\", {\n        className: \"dashboard-graph\"\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        onRef: function onRef(ref) {\n          return _this2.chart = ref;\n        }\n      })), React.createElement(\"div\", {\n        className: \"display-setting\"\n      }, React.createElement(\"div\", {\n        className: \"dashboard-section-header\"\n      }, \"Widgets\"), React.createElement(\"div\", {\n        className: \"display-create-btn\"\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.createNewWidget();\n        },\n        primary: true\n      }, \"Create New Widget\"), React.createElement(\"div\", {\n        className: \"display-view-all\"\n      }, \"View all widgets\")), React.createElement(\"div\", {\n        className: \"display-widget-group\"\n      }, widgets.length == 0 ? React.createElement(\"div\", null, \"No recent widgets!\") : widgets.map(function (widget, key) {\n        if (key < 3) {\n          return React.createElement(\"div\", {\n            className: \"dashboard-widget\",\n            onClick: function onClick() {\n              return _this2.togglePopover(key);\n            }\n          }, React.createElement(\"div\", {\n            className: \"widget-img\"\n          }, React.createElement(\"img\", {\n            src: \"/public/wheel-full.png\"\n          })), React.createElement(\"div\", {\n            className: \"widget-name\"\n          }, React.createElement(\"div\", null, widget.name), React.createElement(\"img\", {\n            src: \"/public/dropdown.png\"\n          })), React.createElement(\"div\", {\n            className: \"widget-staus\"\n          }, React.createElement(\"div\", {\n            className: widget.pause ? 'hold' : 'active'\n          }, widget.pause ? 'On Hold' : 'Active'), React.createElement(\"div\", {\n            className: \"modify-label\"\n          }, \"Last modified: \", widget.created_at)));\n        }\n      }))), React.createElement(\"div\", {\n        className: \"dashboard-email-integrate\"\n      }, React.createElement(\"div\", {\n        classname: \"dashboard-section-header\"\n      }, \"Email Integrations & Export\"), React.createElement(\"div\", {\n        className: \"dashboard-email-body\"\n      }, React.createElement(\"div\", {\n        className: \"dashboard-email-items\"\n      }, React.createElement(\"div\", {\n        className: \"email-kind\"\n      }, React.createElement(\"img\", {\n        src: \"/public/mailchimp.png\"\n      }), React.createElement(\"div\", null, \"MAILCHIMP\")), React.createElement(\"div\", {\n        className: \"email-kind\"\n      }, React.createElement(\"img\", {\n        src: \"/public/klaviyo.png\"\n      }), React.createElement(\"div\", null, \"KLAVIYO\"))), React.createElement(\"div\", {\n        className: \"email-export-section\"\n      }, React.createElement(\"div\", {\n        className: \"email-export-description\"\n      }, \"Do you want to work independently with your email list using other Email Service or for other purposes? Export CSV file.\"), React.createElement(Button, {\n        onClick: this.exportCSV,\n        primary: true\n      }, \"Export CSV\")), React.createElement(\"div\", {\n        className: \"email-footer\"\n      }, React.createElement(\"img\", {\n        src: \"/public/help.png\"\n      }), React.createElement(\"span\", null, \"Learn more about \", React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Email Integration & export\"), \".\")))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/ubuntu/tadaShopify/pages/dashboard.js"],"names":["Popover","ActionList","Button","RadioButton","Stack","Heading","Page","store","Cookies","CanvasJSReact","CanvasJSChart","DateRangePicker","Dashboard","widgets","showPopup","index","fetch","method","headers","body","shop","get","then","resp","json","console","log","setState","key","state","window","location","href","set","_id","type","widget_id","pause","togglePopover","splice","options","theme","animationEnabled","title","text","subtitles","axisX","axisY","titleFontColor","lineColor","labelFontColor","tickColor","includeZero","axisY2","toolTip","shared","legend","cursor","itemclick","toggleDataSeries","data","name","showInLegend","xValueFormatString","yValueFormatString","dataPoints","x","Date","y","axisYType","ref","chart","createNewWidget","length","map","widget","created_at","exportCSV","React","Component"],"mappings":";;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,EAA8BC,MAA9B,EAAsCC,WAAtC,EAAmDC,KAAnD,EAA0DC,OAA1D,EAAmEC,IAAnE,QAA+E,kBAA/E;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAO,kCAAP;AACA,OAAO,+CAAP;AAEA,OAAO,8BAAP;;IAEMC,S;;;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,KAAK,EAAE;AAAxC,K;;wEAEY,YAAM;AACxBC,MAAAA,KAAK,6CAA6C;AAChDC,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFuC;AAKhDC,QAAAA,IAAI,EAAE,gBAAe;AACnBC,UAAAA,IAAI,EAAEZ,OAAO,CAACa,GAAR,CAAY,YAAZ;AADa,SAAf;AAL0C,OAA7C,CAAL,CASCC,IATD,CASM,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OATV,EAUCF,IAVD,CAUM,UAAAE,IAAI,EAAI;AACZ,YAAGA,IAAH,EAAS;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,gBAAKG,QAAL,CAAc;AACZd,YAAAA,OAAO,EAAEW;AADG,WAAd;AAGD;AACF,OAjBD;AAkBD,K;;oEAiLe,UAACI,GAAD,EAAS;AAAA,UAChBd,SADgB,GACH,MAAKe,KADF,CAChBf,SADgB;;AAEvB,YAAKa,QAAL,CAAc;AACZb,QAAAA,SAAS,EAAE,CAACA,SADA;AAEZC,QAAAA,KAAK,EAAEa;AAFK,OAAd;AAID,K;;sEAEiB,YAAM;AACpBE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACH,K;;iEAEY,UAACJ,GAAD,EAAS;AAAA,UACbf,OADa,GACF,MAAKgB,KADH,CACbhB,OADa;AAEpBL,MAAAA,OAAO,CAACyB,GAAR,CAAY,WAAZ,EAAyBpB,OAAO,CAACe,GAAD,CAAP,CAAaM,GAAtC;AACA1B,MAAAA,OAAO,CAACyB,GAAR,CAAY,gBAAZ,EAA8BpB,OAAO,CAACe,GAAD,CAAP,CAAaO,IAA3C;AACAL,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACD,K;;kEAEa,UAACJ,GAAD,EAAS;AAAA,UACff,OADe,GACH,MAAKgB,KADF,CACfhB,OADe;AAErBG,MAAAA,KAAK,wCAAwC;AAC3CC,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFkC;AAK3CC,QAAAA,IAAI,EAAE,gBAAe;AACnBiB,UAAAA,SAAS,EAAEvB,OAAO,CAACe,GAAD,CAAP,CAAaM;AADL,SAAf;AALqC,OAAxC,CAAL,CASCZ,IATD,CASM,UAAAC,IAAI,EAAI;AACVV,QAAAA,OAAO,CAACe,GAAD,CAAP,CAAaS,KAAb,GAAqB,CAACxB,OAAO,CAACe,GAAD,CAAP,CAAaS,KAAnC;;AACA,cAAKC,aAAL,CAAmBV,GAAnB;;AACA,cAAKD,QAAL,CAAc;AACZd,UAAAA,OAAO,EAAEA;AADG,SAAd;AAGH,OAfD;AAgBD,K;;mEAEc,UAACe,GAAD,EAAS;AACpB,UAAIf,OAAO,GAAG,MAAKgB,KAAL,CAAWhB,OAAzB;AACAG,MAAAA,KAAK,yCAAyC;AAC5CC,QAAAA,MAAM,EAAE,MADoC;AAE5CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFmC;AAK5CC,QAAAA,IAAI,EAAE,gBAAe;AACnBiB,UAAAA,SAAS,EAAEvB,OAAO,CAACe,GAAD,CAAP,CAAaM;AADL,SAAf;AALsC,OAAzC,CAAL,CASCZ,IATD,CASM,UAAAC,IAAI,EAAI;AACV,cAAKe,aAAL,CAAmBV,GAAnB;;AACPf,QAAAA,OAAO,CAAC0B,MAAR,CAAeX,GAAf,EAAoB,CAApB;;AACO,cAAKD,QAAL,CAAc;AACZd,UAAAA,OAAO,EAAEA;AADG,SAAd;AAGH,OAfD;AAgBH,K;;;;;;;6BAxOQ;AAAA;;AAAA,wBACiC,KAAKgB,KADtC;AAAA,UACGhB,OADH,eACGA,OADH;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAET,UAAMyB,OAAO,GAAG;AACfC,QAAAA,KAAK,EAAE,QADQ;AAEfC,QAAAA,gBAAgB,EAAE,IAFH;AAGfC,QAAAA,KAAK,EAAC;AACLC,UAAAA,IAAI,EAAE;AADD,SAHS;AAMfC,QAAAA,SAAS,EAAE,CAAC;AACXD,UAAAA,IAAI,EAAE;AADK,SAAD,CANI;AASfE,QAAAA,KAAK,EAAE;AACNH,UAAAA,KAAK,EAAE;AADD,SATQ;AAYfI,QAAAA,KAAK,EAAE;AACNJ,UAAAA,KAAK,EAAE,YADD;AAENK,UAAAA,cAAc,EAAE,SAFV;AAGNC,UAAAA,SAAS,EAAE,SAHL;AAINC,UAAAA,cAAc,EAAE,SAJV;AAKNC,UAAAA,SAAS,EAAE,SALL;AAMNC,UAAAA,WAAW,EAAE;AANP,SAZQ;AAoBfC,QAAAA,MAAM,EAAE;AACPV,UAAAA,KAAK,EAAE,eADA;AAEPK,UAAAA,cAAc,EAAE,SAFT;AAGPC,UAAAA,SAAS,EAAE,SAHJ;AAIPC,UAAAA,cAAc,EAAE,SAJT;AAKPC,UAAAA,SAAS,EAAE,SALJ;AAMPC,UAAAA,WAAW,EAAE;AANN,SApBO;AA4BfE,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE;AADA,SA5BM;AA+BfC,QAAAA,MAAM,EAAE;AACPC,UAAAA,MAAM,EAAE,SADD;AAEPC,UAAAA,SAAS,EAAE,KAAKC;AAFT,SA/BO;AAmCfC,QAAAA,IAAI,EAAE,CAAC;AACNzB,UAAAA,IAAI,EAAE,QADA;AAEN0B,UAAAA,IAAI,EAAE,YAFA;AAGNC,UAAAA,YAAY,EAAE,IAHR;AAINC,UAAAA,kBAAkB,EAAE,UAJd;AAKNC,UAAAA,kBAAkB,EAAE,aALd;AAMNC,UAAAA,UAAU,EAAE,CACX;AAAEC,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WADW,EAEX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAFW,EAGX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAHW,EAIX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAJW,EAKX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WALW,EAMX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WANW,EAOX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAPW,EAQX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WARW,EASX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WATW,EAUX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAVW,EAWX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,CAAnB,CAAL;AAA4BC,YAAAA,CAAC,EAAE;AAA/B,WAXW,EAYX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,CAAnB,CAAL;AAA4BC,YAAAA,CAAC,EAAE;AAA/B,WAZW;AANN,SAAD,EAqBN;AACCjC,UAAAA,IAAI,EAAE,QADP;AAEC0B,UAAAA,IAAI,EAAE,QAFP;AAGCQ,UAAAA,SAAS,EAAE,WAHZ;AAICP,UAAAA,YAAY,EAAE,IAJf;AAKCC,UAAAA,kBAAkB,EAAE,UALrB;AAMCC,UAAAA,kBAAkB,EAAE,UANrB;AAOCC,UAAAA,UAAU,EAAE,CACX;AAAEC,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WADW,EAEX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAFW,EAGX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAHW,EAIX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAJW,EAKX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WALW,EAMX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WANW,EAOX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAPW,EAQX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WARW,EASX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WATW,EAUX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAL;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAVW,EAWX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,CAAnB,CAAL;AAA4BC,YAAAA,CAAC,EAAE;AAA/B,WAXW,EAYX;AAAEF,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,CAAnB,CAAL;AAA4BC,YAAAA,CAAC,EAAE;AAA/B,WAZW;AAPb,SArBM;AAnCS,OAAhB;AA+EE,aACE,oBAAC,IAAD,QACE;AAAK,QAAA,SAAS,EAAC;AAAf,QADF,EAIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,UAA3B;AAAsC,QAAA,OAAO,EAAC;AAA9C,SACE,+DADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,kBADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,sCAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,cADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,kBAFF,CALF,EASE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,eADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,sCAFF,CATF,CANF,CAJF,EAyBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAI5B,OAA1B;AACE,QAAA,KAAK,EAAE,eAAA8B,GAAG;AAAA,iBAAI,MAAI,CAACC,KAAL,GAAaD,GAAjB;AAAA;AADZ,QADF,CAzBF,EA8BE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,mBADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,eAAL,EAAN;AAAA,SAAjB;AAA+C,QAAA,OAAO;AAAtD,6BADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,4BAFF,CAFF,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACK3D,OAAO,CAAC4D,MAAR,IAAkB,CAAnB,GACA,sDADA,GAKA5D,OAAO,CAAC6D,GAAR,CAAY,UAACC,MAAD,EAAS/C,GAAT,EAAiB;AAC3B,YAAGA,GAAG,GAAG,CAAT,EAAY;AACV,iBACA;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAkC,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACU,aAAL,CAAmBV,GAAnB,CAAN;AAAA;AAA3C,aACE;AAAK,YAAA,SAAS,EAAC;AAAf,aACE;AAAK,YAAA,GAAG,EAAC;AAAT,YADF,CADF,EAIE;AAAK,YAAA,SAAS,EAAC;AAAf,aACE,iCAAM+C,MAAM,CAACd,IAAb,CADF,EAEE;AAAK,YAAA,GAAG,EAAC;AAAT,YAFF,CAJF,EAQE;AAAK,YAAA,SAAS,EAAC;AAAf,aACE;AAAK,YAAA,SAAS,EAAEc,MAAM,CAACtC,KAAP,GAAa,MAAb,GAAoB;AAApC,aAAgDsC,MAAM,CAACtC,KAAR,GAAe,SAAf,GAAyB,QAAxE,CADF,EAEE;AAAK,YAAA,SAAS,EAAC;AAAf,gCAA8CsC,MAAM,CAACC,UAArD,CAFF,CARF,CADA;AAeD;AACF,OAlBD,CANJ,CANF,CA9BF,EAgEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,uCADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,GAAG,EAAC;AAAT,QADF,EAEE,6CAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,GAAG,EAAC;AAAT,QADF,EAEE,2CAFF,CALF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,oIADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAiC,QAAA,OAAO;AAAxC,sBAJF,CAXF,EAiBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,GAAG,EAAC;AAAT,QADF,EAEE,uDAAuB;AAAG,QAAA,IAAI,EAAC;AAAR,sCAAvB,MAFF,CAjBF,CAFF,CAhEF,CADF;AA4FD;;;;EArMqBC,KAAK,CAACC,S;;AAmQ9B,eAAenE,SAAf","sourcesContent":["import { Popover, ActionList, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport CanvasJSReact from '../public/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nimport '../stylesheets/dashboard.css';\n\nclass Dashboard extends React.Component {\n  state = { widgets: [], showPopup: false, index: 0 };\n\n  componentDidMount = () => {\n    fetch(`https://app.trytada.com/getDashboardInfo`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        shop: Cookies.get('shopOrigin')\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      if(json) {\n        console.log(json);\n        this.setState({\n          widgets: json\n        });\n      }\n    });\n  }\n\n  render() {\n      const { widgets, showPopup, index } = this.state;\n\t\tconst options = {\n\t\t\ttheme: \"light2\",\n\t\t\tanimationEnabled: true,\n\t\t\ttitle:{\n\t\t\t\ttext: \"Units Sold VS Profit\"\n\t\t\t},\n\t\t\tsubtitles: [{\n\t\t\t\ttext: \"Click Legend to Hide or Unhide Data Series\"\n\t\t\t}],\n\t\t\taxisX: {\n\t\t\t\ttitle: \"States\"\n\t\t\t},\n\t\t\taxisY: {\n\t\t\t\ttitle: \"Units Sold\",\n\t\t\t\ttitleFontColor: \"#6D78AD\",\n\t\t\t\tlineColor: \"#6D78AD\",\n\t\t\t\tlabelFontColor: \"#6D78AD\",\n\t\t\t\ttickColor: \"#6D78AD\",\n\t\t\t\tincludeZero: false\n\t\t\t},\n\t\t\taxisY2: {\n\t\t\t\ttitle: \"Profit in USD\",\n\t\t\t\ttitleFontColor: \"#51CDA0\",\n\t\t\t\tlineColor: \"#51CDA0\",\n\t\t\t\tlabelFontColor: \"#51CDA0\",\n\t\t\t\ttickColor: \"#51CDA0\",\n\t\t\t\tincludeZero: false\n\t\t\t},\n\t\t\ttoolTip: {\n\t\t\t\tshared: true\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tcursor: \"pointer\",\n\t\t\t\titemclick: this.toggleDataSeries\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"spline\",\n\t\t\t\tname: \"Units Sold\",\n\t\t\t\tshowInLegend: true,\n\t\t\t\txValueFormatString: \"MMM YYYY\",\n\t\t\t\tyValueFormatString: \"#,##0 Units\",\n\t\t\t\tdataPoints: [\n\t\t\t\t\t{ x: new Date(2017, 0, 1), y: 120 },\n\t\t\t\t\t{ x: new Date(2017, 1, 1), y: 135 },\n\t\t\t\t\t{ x: new Date(2017, 2, 1), y: 144 },\n\t\t\t\t\t{ x: new Date(2017, 3, 1), y: 103 },\n\t\t\t\t\t{ x: new Date(2017, 4, 1), y: 93 },\n\t\t\t\t\t{ x: new Date(2017, 5, 1), y: 129 },\n\t\t\t\t\t{ x: new Date(2017, 6, 1), y: 143 },\n\t\t\t\t\t{ x: new Date(2017, 7, 1), y: 156 },\n\t\t\t\t\t{ x: new Date(2017, 8, 1), y: 122 },\n\t\t\t\t\t{ x: new Date(2017, 9, 1), y: 106 },\n\t\t\t\t\t{ x: new Date(2017, 10, 1), y: 137 },\n\t\t\t\t\t{ x: new Date(2017, 11, 1), y: 142 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"spline\",\n\t\t\t\tname: \"Profit\",\n\t\t\t\taxisYType: \"secondary\",\n\t\t\t\tshowInLegend: true,\n\t\t\t\txValueFormatString: \"MMM YYYY\",\n\t\t\t\tyValueFormatString: \"$#,##0.#\",\n\t\t\t\tdataPoints: [\n\t\t\t\t\t{ x: new Date(2017, 0, 1), y: 19034.5 },\n\t\t\t\t\t{ x: new Date(2017, 1, 1), y: 20015 },\n\t\t\t\t\t{ x: new Date(2017, 2, 1), y: 27342 },\n\t\t\t\t\t{ x: new Date(2017, 3, 1), y: 20088 },\n\t\t\t\t\t{ x: new Date(2017, 4, 1), y: 20234 },\n\t\t\t\t\t{ x: new Date(2017, 5, 1), y: 29034 },\n\t\t\t\t\t{ x: new Date(2017, 6, 1), y: 30487 },\n\t\t\t\t\t{ x: new Date(2017, 7, 1), y: 32523 },\n\t\t\t\t\t{ x: new Date(2017, 8, 1), y: 20234 },\n\t\t\t\t\t{ x: new Date(2017, 9, 1), y: 27234 },\n\t\t\t\t\t{ x: new Date(2017, 10, 1), y: 33548 },\n\t\t\t\t\t{ x: new Date(2017, 11, 1), y: 32534 }\n\t\t\t\t]\n\t\t\t}]\n\t\t}\n    return (\n      <Page>\n        <div className=\"dashboard-top\">\n\n        </div>\n        <div className=\"dashboard-sales\">\n          <div className=\"date-select\">\n            <DateRangePicker startDate=\"1/1/2014\" endDate=\"3/1/2014\">\n              <button>Click Me To Open Picker!</button>\n            </DateRangePicker>\n          </div>\n          <div className=\"dashboard-info\">\n            <div className=\"dashboard-info-element\">\n              <div className=\"info-values\">$2,543</div>\n              <div className=\"info-description\">Sales amount using coupons</div>\n            </div>\n            <div className=\"dashboard-info-element\">\n              <div className=\"info-values\">24</div>\n              <div className=\"info-description\">Emails</div>\n            </div>\n            <div className=\"dashboard-info-element\">\n              <div className=\"info-values\">12%</div>\n              <div className=\"info-description\">Conversion rate from games</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"dashboard-graph\">\n          <CanvasJSChart options = {options} \n            onRef={ref => this.chart = ref}\n            />\n        </div>\n        <div className=\"display-setting\">\n          <div className=\"dashboard-section-header\">Widgets</div>\n          <div className=\"display-create-btn\">\n            <Button onClick={() => this.createNewWidget()} primary>Create New Widget</Button>\n            <div className=\"display-view-all\">View all widgets</div>\n          </div>\n          <div className=\"display-widget-group\">\n            { (widgets.length == 0)?(\n              <div>\n                No recent widgets!\n              </div>\n            ):(\n              widgets.map((widget, key) => {\n                if(key < 3) {\n                  return (\n                  <div className=\"dashboard-widget\" onClick={() => this.togglePopover(key)}>\n                    <div className=\"widget-img\">\n                      <img src=\"/public/wheel-full.png\" />\n                    </div>\n                    <div className=\"widget-name\">\n                      <div>{widget.name}</div>\n                      <img src=\"/public/dropdown.png\" />\n                    </div>\n                    <div className=\"widget-staus\">\n                      <div className={widget.pause?'hold':'active'}>{(widget.pause)?'On Hold':'Active'}</div>\n                      <div className='modify-label'>Last modified: {widget.created_at}</div>\n                    </div>\n                  </div>\n                  );\n                }\n              })\n            )}\n          </div>\n        </div>\n        <div className=\"dashboard-email-integrate\">\n          <div classname=\"dashboard-section-header\">Email Integrations & Export</div>\n          <div className=\"dashboard-email-body\">\n            <div className=\"dashboard-email-items\">\n              <div className=\"email-kind\">\n                <img src=\"/public/mailchimp.png\" />\n                <div>MAILCHIMP</div>\n              </div>\n              <div className=\"email-kind\">\n                <img src=\"/public/klaviyo.png\" />\n                <div>KLAVIYO</div>\n              </div>\n            </div>\n            <div className=\"email-export-section\">\n              <div className=\"email-export-description\">\n                Do you want to work independently with your email list using other Email Service or for other purposes? Export CSV file.\n              </div>\n              <Button onClick={this.exportCSV} primary>Export CSV</Button>\n            </div>\n            <div className=\"email-footer\">\n              <img src=\"/public/help.png\" />\n              <span>Learn more about <a href=\"#\">Email Integration & export</a>.</span>\n            </div>\n          </div>\n        </div>\n    </Page>\n    )\n  }\n\n  togglePopover = (key) => {\n    const {showPopup} = this.state;\n    this.setState({\n      showPopup: !showPopup,\n      index: key\n    });\n  }\n\n  createNewWidget = () => {\n      window.location.href = '/create';\n  }\n\n  editWidget = (key) => {\n    const {widgets} = this.state;\n    Cookies.set('widget_id', widgets[key]._id);\n    Cookies.set('tada_game_type', widgets[key].type);\n    window.location.href = '/coupons';\n  }\n\n  pauseWidget = (key) => {\n    var { widgets } = this.state;\n    fetch(`https://app.trytada.com/pauseWidget`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        widget_id: widgets[key]._id,\n      })\n    })\n    .then(resp => {\n        widgets[key].pause = !widgets[key].pause;\n        this.togglePopover(key);\n        this.setState({\n          widgets: widgets\n        });\n    });\n  }\n\n  deleteWidget = (key) => {\n      var widgets = this.state.widgets;\n      fetch(`https://app.trytada.com/deleteWidget`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          widget_id: widgets[key]._id,\n        })\n      })\n      .then(resp => {\n          this.togglePopover(key);\n\t  widgets.splice(key, 1);\n          this.setState({\n            widgets: widgets\n          });\n      });\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}