{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Link, TextField, Checkbox, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/settings.css';\n\nvar DetailSetting =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailSetting, _React$Component);\n\n  function DetailSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DetailSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DetailSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      displaySetting: {\n        all: false,\n        products: {\n          allProducts: false\n        },\n        blogs: {\n          allBlogs: false\n        },\n        pages: {\n          allPages: false\n        },\n        specific: false\n      },\n      timer: 0,\n      frequencyDay: 0,\n      frequencyHour: 0,\n      frequencyMin: 0,\n      showPeriod: false,\n      frequency: '',\n      saveDisabled: true,\n      exitIntent: true,\n      exitIntentTime: 5\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      fetch(\"https://app.trytada.com/getSetting\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          id: Cookies.get('widget_id')\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        if (json.error) {\n          return;\n        }\n\n        if (json) {\n          var frequencyDay = Math.floor(json.displayFrequency / (24 * 60 * 60 * 1000));\n          var frequencyHour = Math.floor((json.displayFrequency - frequencyDay * (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));\n          var frequencyMin = Math.floor((json.displayFrequency - frequencyDay * (24 * 60 * 60) - frequencyHour * (60 * 60 * 1000)) / (60 * 1000));\n          var showPeriod = false;\n\n          if (json.frequency == 'period') {\n            showPeriod = true;\n          }\n\n          _this.setState({\n            displaySetting: JSON.parse(json.pageSetting),\n            frequencyDay: frequencyDay,\n            frequencyHour: frequencyHour,\n            frequencyMin: frequencyMin,\n            timer: json.timer,\n            frequency: json.frequency,\n            showPeriod: showPeriod,\n            exitIntent: json.exitIntent,\n            exitIntentTime: json.exitIntentTime\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDisplayChange\", function (field) {\n      return function (value) {\n        var displaySetting = _this.state.displaySetting;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExitIntent\", function (value) {\n      _this.setState({\n        exitIntent: value,\n        saveDisabled: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"timerChange\", function (field) {\n      return function (value) {\n        var _this$setState;\n\n        if (value >= 0) _this.setState((_this$setState = {}, _defineProperty(_this$setState, field, value), _defineProperty(_this$setState, \"saveDisabled\", false), _this$setState));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFrequency\", function (checked, newValue) {\n      if (newValue == 'period') {\n        _this.setState({\n          frequency: newValue,\n          showPeriod: true,\n          saveDisabled: false\n        });\n      } else {\n        _this.setState({\n          frequency: newValue,\n          showPeriod: false,\n          saveDisabled: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveSetting\", function () {\n      var _this$state = _this.state,\n          pricingPlan = _this$state.pricingPlan,\n          displaySetting = _this$state.displaySetting,\n          frequencyDay = _this$state.frequencyDay,\n          frequencyHour = _this$state.frequencyHour,\n          frequencyMin = _this$state.frequencyMin,\n          timer = _this$state.timer,\n          frequency = _this$state.frequency,\n          exitIntent = _this$state.exitIntent,\n          exitIntentTime = _this$state.exitIntentTime;\n      var updateSetting = {};\n\n      if (pricingPlan == \"free\") {\n        updateSetting.pricingPlan = 0;\n      } else {\n        updateSetting.pricingPlan = 1;\n      }\n\n      updateSetting.displayFrequency = frequencyDay * 60 * 60 * 24 + frequencyHour * 60 * 60 + frequencyMin * 60;\n      updateSetting.displaySetting = _JSON$stringify(displaySetting);\n      updateSetting.timer = timer;\n      updateSetting.frequency = frequency;\n      updateSetting.exitIntent = exitIntent;\n      updateSetting.exitIntentTime = exitIntentTime;\n      fetch(\"https://app.trytada.com/saveSetting\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          updateSetting: updateSetting,\n          shop: Cookies.get('shopOrigin')\n        })\n      }).then(function (resp) {\n        _this.setState({\n          saveDisabled: true\n        });\n\n        window.location.href = '/dashboard';\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevStep\", function () {\n      window.location.href = '/style';\n    });\n\n    return _this;\n  }\n\n  _createClass(DetailSetting, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Page, {\n        title: \"Settings\"\n      }, React.createElement(\"div\", {\n        className: \"display-setting\"\n      }, React.createElement(Heading, null, \"Display Setting\"), React.createElement(Stack, {\n        vertical: true\n      }, React.createElement(RadioButton, {\n        label: \"All Pages\",\n        helpText: \"App Widget will be displayed on all pages.\",\n        id: \"all\",\n        name: \"all\",\n        onChange: this.handleDisplayChange('all'),\n        checked: this.state.displaySetting.all\n      }), React.createElement(RadioButton, {\n        label: \"Product Page\",\n        helpText: \"App Widget will be displayed only on product pages\",\n        id: \"products\",\n        name: \"products\",\n        onChange: this.handleDisplayChange('products'),\n        checked: this.state.displaySetting.products.allProducts\n      }), React.createElement(RadioButton, {\n        label: \"Static Page\",\n        helpText: \"App Widget will be displayed only on static pages\",\n        id: \"pages\",\n        name: \"pages\",\n        onChange: this.handleDisplayChange('pages'),\n        checked: this.state.displaySetting.pages.allPages\n      }), React.createElement(RadioButton, {\n        label: \"Blog Page\",\n        helpText: \"App Widget will be displayed only on blogs pages\",\n        id: \"blogs\",\n        name: \"blogs\",\n        onChange: this.handleDisplayChange('blogs'),\n        checked: this.state.displaySetting.blogs.allBlogs\n      }), React.createElement(RadioButton, {\n        label: \"Specific Page\",\n        helpText: \"App Widget will be displayed only on specific pages\",\n        id: \"specific\",\n        name: \"specific\",\n        onChange: this.handleDisplayChange('specific'),\n        checked: this.state.displaySetting.specific\n      }), this.state.displaySetting.specific ? React.createElement(\"div\", {\n        className: \"subsetting\"\n      }, React.createElement(Link, {\n        url: \"/selectPages\"\n      }, \"Select Specific Pages\")) : null), React.createElement(TextField, {\n        value: this.state.timer,\n        onChange: this.timerChange('timer'),\n        label: \"Timer Value\",\n        type: \"number\"\n      })), React.createElement(\"div\", {\n        className: \"frequency-setting\"\n      }, React.createElement(Heading, null, \"How often display widget\"), React.createElement(Stack, {\n        vertical: true\n      }, React.createElement(RadioButton, {\n        label: \"Every Time\",\n        helpText: \"Game modal will show every time\",\n        id: \"every\",\n        name: \"every\",\n        onChange: this.handleFrequency,\n        checked: this.state.frequency === \"every\"\n      }), this.state.frequency === \"every\" ? React.createElement(\"div\", {\n        className: \"exit-intent\"\n      }, React.createElement(Checkbox, {\n        checked: this.state.exitIntent,\n        label: \"On Desktop - Only show when visitor are about to exit the page\",\n        onChange: this.handleExitIntent\n      }), this.state.exitIntent ? React.createElement(\"div\", null, React.createElement(TextField, {\n        value: this.state.exitIntentTime,\n        onChange: this.timerChange('exitIntentTime'),\n        label: \"Period for displaying Exit Intent\",\n        type: \"number\"\n      })) : null) : null, React.createElement(RadioButton, {\n        label: \"One Time\",\n        helpText: \"Game will show only once per user.\",\n        id: \"one\",\n        name: \"one\",\n        onChange: this.handleFrequency,\n        checked: this.state.frequency === 'one'\n      }), this.state.frequency === \"one\" ? React.createElement(\"div\", {\n        className: \"exit-intent\"\n      }, React.createElement(Checkbox, {\n        checked: this.state.exitIntent,\n        label: \"On Desktop - Only show when visitor are about to exit the page\",\n        onChange: this.handleExitIntent\n      }), this.state.exitIntent ? React.createElement(\"div\", null, React.createElement(TextField, {\n        value: this.state.exitIntentTime,\n        onChange: this.timerChange('exitIntentTime'),\n        label: \"Period for displaying Exit Intent\",\n        type: \"number\"\n      })) : null) : null, React.createElement(RadioButton, {\n        label: \"Certain Period\",\n        helpText: \"Game will show in every certain period.\",\n        id: \"period\",\n        name: \"period\",\n        onChange: this.handleFrequency,\n        checked: this.state.frequency === 'period'\n      }), this.state.frequency === \"period\" ? React.createElement(\"div\", {\n        className: \"exit-intent\"\n      }, React.createElement(Checkbox, {\n        checked: this.state.exitIntent,\n        label: \"On Desktop - Only show when visitor are about to exit the page\",\n        onChange: this.handleExitIntent\n      }), this.state.exitIntent ? React.createElement(\"div\", null, React.createElement(TextField, {\n        value: this.state.exitIntentTime,\n        onChange: this.timerChange('exitIntentTime'),\n        label: \"Period for displaying Exit Intent\",\n        type: \"number\"\n      })) : null) : null), this.state.showPeriod ? React.createElement(Stack, {\n        horizontal: true\n      }, React.createElement(TextField, {\n        value: this.state.frequencyDay,\n        onChange: this.timerChange('frequencyDay'),\n        label: \"Days\",\n        type: \"number\"\n      }), React.createElement(TextField, {\n        value: this.state.frequencyHour,\n        onChange: this.timerChange('frequencyHour'),\n        label: \"Hours\",\n        type: \"number\"\n      }), React.createElement(TextField, {\n        value: this.state.frequencyMin,\n        onChange: this.timerChange('frequencyMin'),\n        label: \"Mins\",\n        type: \"number\"\n      })) : null), React.createElement(\"div\", {\n        className: \"page-footer\"\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.prevStep();\n        }\n      }, \"Previous Step\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.saveSetting();\n        },\n        disabled: this.state.saveDisabled,\n        primary: true\n      }, \"Save\")));\n    }\n  }]);\n\n  return DetailSetting;\n}(React.Component);\n\nexport default DetailSetting;","map":{"version":3,"sources":["/Users/dev/Documents/Git/tadaShopify/pages/detailSetting.js"],"names":["Link","TextField","Checkbox","Button","RadioButton","Stack","Heading","Page","store","Cookies","DetailSetting","displaySetting","all","products","allProducts","blogs","allBlogs","pages","allPages","specific","timer","frequencyDay","frequencyHour","frequencyMin","showPeriod","frequency","saveDisabled","exitIntent","exitIntentTime","fetch","method","headers","body","id","get","then","resp","json","error","Math","floor","displayFrequency","setState","JSON","parse","pageSetting","field","value","state","checked","newValue","pricingPlan","updateSetting","shop","window","location","href","handleDisplayChange","timerChange","handleFrequency","handleExitIntent","prevStep","saveSetting","React","Component"],"mappings":"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","sourcesContent":["import { Link, TextField, Checkbox, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/settings.css';\n\nclass DetailSetting extends React.Component {\n  state = { displaySetting: {\n    all: false,\n    products: {\n      allProducts: false\n    },\n    blogs: {\n      allBlogs: false,\n    },\n    pages: {\n      allPages: false,\n    },\n    specific: false,\n  }, timer: 0, frequencyDay: 0, frequencyHour: 0, frequencyMin: 0, showPeriod: false, frequency: '', saveDisabled: true, exitIntent: true, exitIntentTime: 5 };\n\n  componentDidMount = () => {\n    fetch(`https://app.trytada.com/getSetting`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Cookies.get('widget_id')\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      if(json.error) {\n        return;\n      }\n      if(json) {\n        var frequencyDay = Math.floor(json.displayFrequency/(24*60*60*1000));\n        var frequencyHour = Math.floor((json.displayFrequency - frequencyDay * (24* 60 * 60 * 1000))/(60*60*1000));\n        var frequencyMin = Math.floor((json.displayFrequency - frequencyDay * (24*60*60) - frequencyHour * (60 * 60 * 1000))/(60 * 1000));\n        var showPeriod = false;\n        if(json.frequency == 'period') {\n          showPeriod = true;\n        }\n\n        this.setState({\n          displaySetting: JSON.parse(json.pageSetting),\n          frequencyDay,\n          frequencyHour,\n          frequencyMin,\n          timer: json.timer,\n          frequency: json.frequency,\n          showPeriod,\n          exitIntent: json.exitIntent,\n          exitIntentTime: json.exitIntentTime\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Page\n        title=\"Settings\"\n      >\n        <div className=\"display-setting\">\n          <Heading>Display Setting</Heading>\n          <Stack vertical>\n            <RadioButton label=\"All Pages\" helpText=\"App Widget will be displayed on all pages.\" id=\"all\" name=\"all\" onChange={this.handleDisplayChange('all')}  checked={this.state.displaySetting.all}/>\n            <RadioButton label=\"Product Page\" helpText=\"App Widget will be displayed only on product pages\" id=\"products\" name=\"products\" onChange={this.handleDisplayChange('products')} checked={this.state.displaySetting.products.allProducts} />\n            <RadioButton label=\"Static Page\" helpText=\"App Widget will be displayed only on static pages\" id=\"pages\" name=\"pages\" onChange={this.handleDisplayChange('pages')} checked={this.state.displaySetting.pages.allPages} />\n            <RadioButton label=\"Blog Page\" helpText=\"App Widget will be displayed only on blogs pages\" id=\"blogs\" name=\"blogs\" onChange={this.handleDisplayChange('blogs')} checked={this.state.displaySetting.blogs.allBlogs} />\n            <RadioButton label=\"Specific Page\" helpText=\"App Widget will be displayed only on specific pages\" id=\"specific\" name=\"specific\" onChange={this.handleDisplayChange('specific')} checked={this.state.displaySetting.specific} />\n            { (this.state.displaySetting.specific)?(\n              <div className=\"subsetting\">\n                <Link url=\"/selectPages\">Select Specific Pages</Link>\n              </div>\n            ):(null) }\n          </Stack>\n\n          <TextField value={this.state.timer} onChange={this.timerChange('timer')} label=\"Timer Value\" type=\"number\" />\n        </div>\n        <div className=\"frequency-setting\">\n          <Heading>How often display widget</Heading>\n          <Stack vertical>\n            <RadioButton label=\"Every Time\" helpText=\"Game modal will show every time\" id=\"every\" name=\"every\" onChange={this.handleFrequency} checked={this.state.frequency === \"every\"} />\n            { (this.state.frequency === \"every\")?(\n                <div className=\"exit-intent\">\n                  <Checkbox checked={this.state.exitIntent} label=\"On Desktop - Only show when visitor are about to exit the page\" onChange={this.handleExitIntent} />\n                  {(this.state.exitIntent)?(\n                    <div>\n                      <TextField value={this.state.exitIntentTime} onChange={this.timerChange('exitIntentTime')} label=\"Period for displaying Exit Intent\" type=\"number\" />\n                    </div>\n                  ):(null)}\n                </div>\n          ):(null)\n            }\n            <RadioButton label=\"One Time\" helpText=\"Game will show only once per user.\" id=\"one\" name=\"one\" onChange={this.handleFrequency} checked={this.state.frequency === 'one'} />\n            { (this.state.frequency === \"one\")?(\n                <div className=\"exit-intent\">\n                  <Checkbox checked={this.state.exitIntent} label=\"On Desktop - Only show when visitor are about to exit the page\" onChange={this.handleExitIntent} />\n                  {(this.state.exitIntent)?(\n                    <div>\n                      <TextField value={this.state.exitIntentTime} onChange={this.timerChange('exitIntentTime')} label=\"Period for displaying Exit Intent\" type=\"number\" />\n                    </div>\n                  ):(null)}\n                </div>\n          ):(null)\n            }\n            <RadioButton label=\"Certain Period\" helpText=\"Game will show in every certain period.\" id=\"period\" name=\"period\" onChange={this.handleFrequency} checked={this.state.frequency === 'period'} />\n            { (this.state.frequency === \"period\")?(\n                <div className=\"exit-intent\">\n                  <Checkbox checked={this.state.exitIntent} label=\"On Desktop - Only show when visitor are about to exit the page\" onChange={this.handleExitIntent} />\n                  {(this.state.exitIntent)?(\n                    <div>\n                      <TextField value={this.state.exitIntentTime} onChange={this.timerChange('exitIntentTime')} label=\"Period for displaying Exit Intent\" type=\"number\" />\n                    </div>\n                  ):(null)}\n                </div>\n          ):(null)\n            }\n          </Stack>\n          { (this.state.showPeriod)?(\n            <Stack horizontal>\n              <TextField value={this.state.frequencyDay} onChange={this.timerChange('frequencyDay')} label=\"Days\" type=\"number\" />\n              <TextField value={this.state.frequencyHour} onChange={this.timerChange('frequencyHour')} label=\"Hours\" type=\"number\" />\n              <TextField value={this.state.frequencyMin} onChange={this.timerChange('frequencyMin')} label=\"Mins\" type=\"number\" />\n            </Stack>\n          ):(null)}\n        </div>\n        <div className=\"page-footer\">\n          <Button onClick={() => this.prevStep()}>Previous Step</Button>\n          <Button onClick={() => this.saveSetting()} disabled={this.state.saveDisabled} primary>Save</Button>\n        </div>\n      </Page>\n    );\n  }\n\n  handleDisplayChange = (field) => {\n    return (value) => {\n      var {displaySetting} = this.state;\n      \n    }\n  }\n\n  handleExitIntent = (value) => {\n    this.setState({ exitIntent: value, saveDisabled: false });\n  }\n\n  timerChange = (field) => {\n    return (value) => {\n      if(value >= 0) this.setState({[field]: value, saveDisabled: false})\n    }\n  }\n\n  handleFrequency = (checked, newValue) => {\n    if(newValue == 'period') {\n      this.setState({\n        frequency: newValue,\n        showPeriod: true,\n\t      saveDisabled: false\n      });\n    } else {\n      this.setState({\n        frequency: newValue,\n        showPeriod: false,\n\t      saveDisabled: false\n      });\n    }\n  }\n\n  saveSetting = () => {\n   var { pricingPlan, displaySetting, frequencyDay, frequencyHour, frequencyMin, timer, frequency, exitIntent, exitIntentTime } = this.state;\n   var updateSetting = {};\n   if(pricingPlan == \"free\") {\n     updateSetting.pricingPlan = 0;\n   } else {\n     updateSetting.pricingPlan = 1;\n   }\n   updateSetting.displayFrequency = frequencyDay * 60 * 60 * 24 + frequencyHour * 60 * 60 + frequencyMin * 60;\n   updateSetting.displaySetting = JSON.stringify(displaySetting);\n   updateSetting.timer = timer;\n   updateSetting.frequency = frequency;\n   updateSetting.exitIntent = exitIntent;\n   updateSetting.exitIntentTime = exitIntentTime;\n   fetch(`https://app.trytada.com/saveSetting`, {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json'\n     },\n     body: JSON.stringify({\n       updateSetting,\n       shop: Cookies.get('shopOrigin')\n    })\n   }).then(resp => {\n     this.setState({\n\t    saveDisabled: true\n     });\n     window.location.href = '/dashboard';\n   });\n  }\n\n  prevStep = () => {\n    window.location.href = '/style';\n  }\n}\n\nexport default DetailSetting;\n"]},"metadata":{},"sourceType":"module"}