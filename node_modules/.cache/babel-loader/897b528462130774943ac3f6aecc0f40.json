{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Link, TextField, Checkbox, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/settings.css';\n\nvar Setting =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Setting, _React$Component);\n\n  function Setting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Setting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      setting: {},\n      targetting: [{\n        label: 'All Pages',\n        value: 'allPages'\n      }, {\n        label: 'All Products',\n        value: 'allProducts'\n      }, {\n        label: 'All Static Pages',\n        value: 'allStatic'\n      }, {\n        label: 'All Blogs',\n        value: 'allBlogs'\n      }, {\n        label: 'Specific Pages',\n        value: 'specific'\n      }]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      fetch('https://app.trytada.com/getSetting', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: _JSON$stringify({\n          id: Cookies.get('widget_id')\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        if (json.error) {\n          console.log('err');\n          return;\n        }\n\n        var setting = json.setting;\n\n        _this.setState({\n          setting: setting\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevStep\", function () {\n      window.location.href = '/style';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"nextStep\", function () {\n      window.location.href = '/final';\n    });\n\n    return _this;\n  }\n\n  _createClass(Setting, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          style = _this$state.style,\n          options = _this$state.options,\n          selected = _this$state.selected;\n      return React.createElement(Page, {\n        title: \"Visual Style\"\n      }, React.createElement(\"div\", {\n        className: \"style-setting\"\n      }, React.createElement(Checkbox, {\n        checked: style == '#dddddd',\n        label: \"Clear Theme\",\n        onChange: this.changeColor('#dddddd')\n      }), React.createElement(Checkbox, {\n        checked: style == '#333333',\n        label: \"Dark Theme\",\n        onChange: this.changeColor('#333333')\n      }), React.createElement(Stack, {\n        horizontal: true\n      }, React.createElement(Checkbox, {\n        checked: style != '#dddddd' && style != '#333333',\n        label: \"Color Theme\",\n        onChange: this.changeColor('color')\n      }), React.createElement(Select, {\n        options: options,\n        onChange: this.handleChange,\n        value: selected\n      }))), React.createElement(Stack, {\n        horizontal: true\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.prevStep();\n        }\n      }, \"Previous Step\"), React.createElement(Button, {\n        primary: true,\n        onClick: function onClick() {\n          return _this2.nextStep();\n        }\n      }, \"Next Step\")));\n    }\n  }]);\n\n  return Setting;\n}(React.Component);\n\nexport default Setting;","map":{"version":3,"sources":["/Users/dev/Documents/Git/tadaShopify/pages/setting.js"],"names":["Link","TextField","Checkbox","Button","RadioButton","Stack","Heading","Page","store","Cookies","Setting","setting","targetting","label","value","fetch","method","headers","body","id","get","then","resp","json","error","console","log","setState","window","location","href","state","style","options","selected","changeColor","handleChange","prevStep","nextStep","React","Component"],"mappings":"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","sourcesContent":["import { Link, TextField, Checkbox, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/settings.css';\n\nclass Setting extends React.Component {\n  state = {\n      setting: {},\n      targetting: [\n        { label: 'All Pages', value: 'allPages' },\n        { label: 'All Products', value: 'allProducts' },\n        { label: 'All Static Pages', value: 'allStatic' },\n        { label: 'All Blogs', value: 'allBlogs' },\n        { label: 'Specific Pages', value: 'specific' },\n      ]\n    };\n\n  componentDidMount = () => {\n    fetch('https://app.trytada.com/getSetting', {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            id: Cookies.get('widget_id')\n        })\n    }).then(resp => resp.json())\n    .then(json => {\n        if(json.error) {\n            console.log('err');\n            return;\n        }\n        var setting = json.setting;\n        this.setState({\n            setting\n        });\n    })\n  }\n\n  render() {\n      const { style, options, selected } = this.state;\n    return (\n      <Page\n        title=\"Visual Style\"\n      >\n        <div className=\"style-setting\">\n            <Checkbox checked={style == '#dddddd'} label=\"Clear Theme\" onChange={this.changeColor('#dddddd')} />\n            <Checkbox checked={style == '#333333'} label=\"Dark Theme\" onChange={this.changeColor('#333333')} />\n            <Stack horizontal>\n                <Checkbox checked={style != '#dddddd' && style != '#333333'} label=\"Color Theme\" onChange={this.changeColor('color')} />\n                <Select\n                    options={options}\n                    onChange={this.handleChange}\n                    value={selected}\n                />\n            </Stack>\n        </div>\n        <Stack horizontal>\n            <Button onClick={() => this.prevStep()} >Previous Step</Button>\n            <Button primary onClick={() => this.nextStep()}>Next Step</Button>\n        </Stack>\n    </Page>\n    )\n  }\n\n  prevStep = () => {\n      window.location.href = '/style'\n  }\n\n  nextStep = () => {\n      window.location.href = '/final';\n  }\n}\n\nexport default Setting;"]},"metadata":{},"sourceType":"module"}