{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Link, TextField, Checkbox, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/create.css';\n\nvar Create =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Create, _React$Component);\n\n  function Create() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Create)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      type: 0,\n      name: '',\n      exist: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeName\", function () {\n      return function (value) {\n        _this.setState({\n          name: value,\n          exist: false\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectWidget\", function (type) {\n      _this.setState({\n        type: type\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createNewWidget\", function () {\n      var _this$state = _this.state,\n          type = _this$state.type,\n          name = _this$state.name;\n      fetch(\"https://app.trytada.com/createWidget\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: _JSON$stringify({\n          type: type,\n          name: name\n        }).then(function (resp) {\n          return resp.json();\n        }).then(function (json) {\n          if (json.error) {\n            _this.setState({\n              exist: true\n            });\n          } else {\n            Cookies.set('widget_id', json.id);\n            window.location.href = '/coupons';\n          }\n        })\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Page, {\n        title: \"Create your first widget\"\n      }, React.createElement(\"div\", {\n        className: \"display-setting\"\n      }, React.createElement(Heading, null, \"Name of Widget\"), React.createElement(TextField, {\n        value: this.state.name,\n        onChange: this.changeName,\n        type: \"text\"\n      }), this.state.exist ? React.createElement(\"div\", null, \"Already exist!\") : null, React.createElement(\"div\", {\n        className: \"widgets-group\"\n      }, React.createElement(Heading, null, \"Select type of widget\"), React.createElement(\"div\", {\n        className: \"widget-type\"\n      }, React.createElement(\"div\", null, \"Kind 1\"), React.createElement(\"div\", null, \"Spinning Wheel\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.selectWidget(0);\n        },\n        primary: true\n      }, \"Select Widget\"))), React.createElement(\"div\", null, React.createElement(\"button\", {\n        className: \"create-widget-btn\",\n        onClick: function onClick() {\n          return _this2.createNewWidget();\n        }\n      }, \"Create Widget\"))));\n    }\n  }]);\n\n  return Create;\n}(React.Component);\n\nexport default Create;","map":{"version":3,"sources":["/Users/dev/Documents/Git/tadaShopify/pages/create.js"],"names":["Link","TextField","Checkbox","Button","RadioButton","Stack","Heading","Page","store","Cookies","Create","type","name","exist","value","setState","state","fetch","method","headers","body","then","resp","json","error","set","id","window","location","href","changeName","selectWidget","createNewWidget","React","Component"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,WAA5C,EAAyDC,KAAzD,EAAgEC,OAAhE,EAAyEC,IAAzE,QAAqF,kBAArF;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,2BAAP;;IAEMC,M;;;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,K;;iEA6BK,YAAM;AACf,aAAO,UAACC,KAAD,EAAW;AACd,cAAKC,QAAL,CAAc;AACVH,UAAAA,IAAI,EAAEE,KADI;AAEVD,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIH,OALD;AAMH,K;;mEAEc,UAACF,IAAD,EAAU;AACrB,YAAKI,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAEA;AADI,OAAd;AAGH,K;;sEAEiB,YAAM;AAAA,wBACG,MAAKK,KADR;AAAA,UACZL,IADY,eACZA,IADY;AAAA,UACNC,IADM,eACNA,IADM;AAEpBK,MAAAA,KAAK,yCAAyC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFiC;AAK1CC,QAAAA,IAAI,EAAE,gBAAe;AACjBT,UAAAA,IAAI,EAAEA,IADW;AAEjBC,UAAAA,IAAI,EAAEA;AAFW,SAAf,EAGHS,IAHG,CAGE,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,SAHN,EAILF,IAJK,CAIA,UAAAE,IAAI,EAAI;AACV,cAAGA,IAAI,CAACC,KAAR,EAAe;AACX,kBAAKT,QAAL,CAAc;AACVF,cAAAA,KAAK,EAAE;AADG,aAAd;AAGH,WAJD,MAIO;AACHJ,YAAAA,OAAO,CAACgB,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAACG,EAA9B;AACAC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACH;AACJ,SAbK;AALoC,OAAzC,CAAL;AAoBH,K;;;;;;;6BAhEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAC;AADR,SAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,OAAD,yBADF,EAEE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWJ,IAA7B;AAAmC,QAAA,QAAQ,EAAE,KAAKkB,UAAlD;AAA8D,QAAA,IAAI,EAAC;AAAnE,QAFF,EAGK,KAAKd,KAAL,CAAWH,KAAZ,GACE,kDADF,GAEE,IALN,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACA,oBAAC,OAAD,gCADA,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,0CADJ,EAEI,kDAFJ,EAGI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACkB,YAAL,CAAkB,CAAlB,CAAN;AAAA,SAAjB;AAA6C,QAAA,OAAO;AAApD,yBAHJ,CAFF,CANF,EAcE,iCACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,eAAL,EAAN;AAAA;AAA/C,yBADF,CAdF,CAHF,CADF;AAwBD;;;;EA5BkBC,KAAK,CAACC,S;;AAsE3B,eAAexB,MAAf","sourcesContent":["import { Link, TextField, Checkbox, Button, RadioButton, Stack, Heading, Page } from '@shopify/polaris';\nimport store from 'store-js';\nimport Cookies from 'js-cookie';\nimport '../stylesheets/create.css';\n\nclass Create extends React.Component {\n  state = { type: 0, name: '', exist: false };\n\n  render() {\n    return (\n      <Page\n        title=\"Create your first widget\"\n      >\n        <div className=\"display-setting\">\n          <Heading>Name of Widget</Heading>\n          <TextField value={this.state.name} onChange={this.changeName} type=\"text\" />\n          { (this.state.exist)?(\n              <div>Already exist!</div>\n          ): (null)}\n          <div className=\"widgets-group\">\n          <Heading>Select type of widget</Heading>\n            <div className=\"widget-type\">\n                <div>Kind 1</div>\n                <div>Spinning Wheel</div>\n                <Button onClick={() => this.selectWidget(0)} primary>Select Widget</Button>\n            </div>\n          </div>\n          <div>\n            <button className=\"create-widget-btn\" onClick={() => this.createNewWidget()}>Create Widget</button>\n          </div>\n        </div>\n    </Page>\n    )\n  }\n\n  changeName = () => {\n      return (value) => {\n          this.setState({\n              name: value,\n              exist: false\n          })\n      }\n  }\n\n  selectWidget = (type) => {\n      this.setState({\n          type: type\n      });\n  }\n\n  createNewWidget = () => {\n      const { type, name } = this.state;\n      fetch(`https://app.trytada.com/createWidget`, {\n          method: 'POST',\n          headers: {\n              'Content-type': 'application/json'\n          },\n          body: JSON.stringify({\n              type: type,\n              name: name\n          }).then(resp => resp.json())\n          .then(json => {\n              if(json.error) {\n                  this.setState({\n                      exist: true\n                  })\n              } else {\n                  Cookies.set('widget_id', json.id);\n                  window.location.href = '/coupons';\n              }\n          })\n      })\n  }\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}